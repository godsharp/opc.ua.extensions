//------------------------------------------------------------------------------
// <auto-generated>
//     Generated by MSBuild generator.
//     Source: Union.cs
// </auto-generated>
//------------------------------------------------------------------------------

using GodSharp.Extensions.Opc.Ua.Types;
using Opc.Ua;
using static GodSharp.Extensions.Opc.Ua.Types.Encodings.EncodingFactory;

namespace CodeGeneratorSourceGeneratorTest
{
	public partial class UaAnsiUnion : ComplexObject 
	{
		public uint SwitchField;

		public override void Encode(IEncoder encoder)
		{
			base.Encode(encoder);
			encoder.WriteUInt32("SwitchField",SwitchField);
			switch (SwitchField)
			{
				case 1:
					Encoding.Write(encoder, Int32, nameof(Int32));
					break;
				case 2:
				case 4:
					Encoding.Write(encoder, String, nameof(String));
					break;
				default:
					break;
			}
		}

		public override void Decode(IDecoder decoder)
		{
			base.Decode(decoder);
			SwitchField = decoder.ReadUInt32("SwitchField");
			switch (SwitchField)
			{
				case 1:
					Encoding.Read(decoder,ref Int32, nameof(Int32));
					break;
				case 2:
				case 4:
					Encoding.Read(decoder,ref String, nameof(String));
					break;
				default:
					break;
			}
		}
	}
}

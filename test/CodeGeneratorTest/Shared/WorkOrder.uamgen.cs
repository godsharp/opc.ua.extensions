//------------------------------------------------------------------------------
// <auto-generated>
//     Generated by MSBuild generator.
//     Source: WorkOrder.cs
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using GodSharp.Extensions.Opc.Ua.Types;
using Opc.Ua;
using static GodSharp.Extensions.Opc.Ua.Types.Encodings.EncodingFactory;

namespace CodeGeneratorMsBuildTest
{
	public partial class WorkOrder : ComplexObject
	{
		public override void Encode(IEncoder encoder)
		{
			base.Encode(encoder);
			Encoding.Write(encoder, Id, nameof(Id));
			Encoding.Write(encoder, AssetId, nameof(AssetId));
			Encoding.Write(encoder, StartTime, nameof(StartTime));
			Encoding.Write(encoder, StatusComments, nameof(StatusComments));
		}

		public override void Decode(IDecoder decoder)
		{
			base.Decode(decoder);
			Encoding.Read(decoder, ref Id, nameof(Id));
			Encoding.Read(decoder, ref AssetId, nameof(AssetId));
			Encoding.Read(decoder, ref StartTime, nameof(StartTime));
			Encoding.Read(decoder, ref StatusComments, nameof(StatusComments));
		}
	}

	public partial class WorkOrderStatus : ComplexObject
	{
		public override void Encode(IEncoder encoder)
		{
			base.Encode(encoder);
			Encoding.Write(encoder, Actor, nameof(Actor));
			Encoding.Write(encoder, Timestamp, nameof(Timestamp));
			Encoding.Write(encoder, Comment, nameof(Comment));
		}

		public override void Decode(IDecoder decoder)
		{
			base.Decode(decoder);
			Encoding.Read(decoder, ref Actor, nameof(Actor));
			Encoding.Read(decoder, ref Timestamp, nameof(Timestamp));
			Encoding.Read(decoder, ref Comment, nameof(Comment));
		}
	}
}

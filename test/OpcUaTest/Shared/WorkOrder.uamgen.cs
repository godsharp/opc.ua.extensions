//------------------------------------------------------------------------------
// <auto-generated>
//     Generated by MSBuild generator.
//     Source: WorkOrder.cs
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using GodSharp.Extensions.Opc.Ua.Types;
using Opc.Ua;
using GodSharp.Extensions.Opc.Ua.Types.Encodings;

namespace OpcUaTest
{
	public partial class WorkOrder : ComplexObject
	{
		public override void Encode(IEncoder encoder)
		{
			base.Encode(encoder);
			encoder.Write(Id, nameof(Id));
			encoder.Write(AssetId, nameof(AssetId));
			encoder.Write(StartTime, nameof(StartTime));
			encoder.Write(StatusComments, nameof(StatusComments));
		}

		public override void Decode(IDecoder decoder)
		{
			base.Decode(decoder);
			decoder.Read(ref Id, nameof(Id));
			decoder.Read(ref AssetId, nameof(AssetId));
			decoder.Read(ref StartTime, nameof(StartTime));
			decoder.Read(ref StatusComments, nameof(StatusComments));
		}
	}

	public partial class WorkOrderStatus : ComplexObject
	{
		public override void Encode(IEncoder encoder)
		{
			base.Encode(encoder);
			encoder.Write(Actor, nameof(Actor));
			encoder.Write(Timestamp, nameof(Timestamp));
			encoder.Write(Comment, nameof(Comment));
		}

		public override void Decode(IDecoder decoder)
		{
			base.Decode(decoder);
			decoder.Read(ref Actor, nameof(Actor));
			decoder.Read(ref Timestamp, nameof(Timestamp));
			decoder.Read(ref Comment, nameof(Comment));
		}
	}
}
